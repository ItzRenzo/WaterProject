CREATE TABLE Customer (
    CustomerID INT PRIMARY KEY AUTO_INCREMENT,
    CustomerName VARCHAR(100) NOT NULL,
    CustomerNumber VARCHAR(12) NOT NULL,
    CustomerAddress VARCHAR(255) NOT NULL
);

CREATE TABLE Product (
    ProductID INT PRIMARY KEY AUTO_INCREMENT,
    ProductName VARCHAR(100) NOT NULL,
    ProductPrice DECIMAL(10, 2) NOT NULL,
    ProductDescription TEXT,
    ProductStatus VARCHAR(50) NOT NULL,
    Stocks INT NOT NULL DEFAULT 0
);

CREATE TABLE Container (
    ContainerID INT PRIMARY KEY AUTO_INCREMENT,
    ContainerType VARCHAR(50) NOT NULL,
    ContainerCapacity DECIMAL(10, 2) NOT NULL,
    ContainerStatus VARCHAR(50) NOT NULL,
    Stocks INT NOT NULL DEFAULT 0
);

CREATE TABLE Employee (
    EmployeeID INT PRIMARY KEY AUTO_INCREMENT,
    FirstName VARCHAR(50) NOT NULL,
    LastName VARCHAR(50) NOT NULL,
    EmployeePosition VARCHAR(50) NOT NULL,
    EmployeeNumber VARCHAR(12) NOT NULL,
    EmployeeStatus VARCHAR(50) NOT NULL,
    Username VARCHAR(50) NOT NULL,
    Password VARCHAR(255) NOT NULL,
    DateJoined DATE NULL
);


CREATE TABLE Transaction (
    TransactionID INT PRIMARY KEY AUTO_INCREMENT,
    CustomerID INT,
    TransactionDate DATETIME NOT NULL,
    TotalAmount DECIMAL(10, 2) NOT NULL,
    PaymentMethod VARCHAR(50),
    DeliveryStatus VARCHAR(50),
    FOREIGN KEY (CustomerID) REFERENCES Customer(CustomerID)
);

CREATE TABLE Order_Details (
    DeliveryID INT PRIMARY KEY AUTO_INCREMENT,
    TransactionID INT,
    EmployeeID INT,
    CustomerID INT,
    DeliveryStatus VARCHAR(50),
    FOREIGN KEY (TransactionID) REFERENCES Transaction`(TransactionID),
    FOREIGN KEY (EmployeeID) REFERENCES Employee(EmployeeID),
	FOREIGN KEY (CustomerID) REFERENCES Customer(CustomerID)
);

CREATE TABLE Reports (
    ReportID INT PRIMARY KEY AUTO_INCREMENT,
    ContainerID INT,
    ProductID INT,
    DeliveryID INT,
    ExpensesID INT,
    Stocks_Added INT NOT NULL DEFAULT 0,
    Stocks_Added_Date DATE NOT NULL,

    FOREIGN KEY (ContainerID) REFERENCES Container(ContainerID),
    FOREIGN KEY (ProductID) REFERENCES Product(ProductID),
    FOREIGN KEY (DeliveryID) REFERENCES Order_Details(DeliveryID),
    FOREIGN KEY (ExpensesID) REFERENCES Expenses(ExpensesID)
);



CREATE TABLE ExpenseTypes (
    ExpenseTypeID INT PRIMARY KEY AUTO_INCREMENT,
    TypeName VARCHAR(100) NOT NULL
);

CREATE TABLE LoggedExpenses (
    ExpensesID INT PRIMARY KEY AUTO_INCREMENT,
    ExpenseTypeID INT,
    Amount DECIMAL(10, 2) NOT NULL,
    ExpenseDate DATE NOT NULL,
    FOREIGN KEY (ExpenseTypeID) REFERENCES ExpenseTypes(ExpenseTypeID)
);


